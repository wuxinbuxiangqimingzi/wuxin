[{"title":"Hello World","url":"/2025/10/30/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"SSH运行原理和常用指令","url":"/2025/10/31/SSH%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%90%86%E5%92%8C%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/","content":"叠甲![事前声明：这只是本人自己的见解和笔记，目的是尝试编写博客（辅）并让自己对SSH的理解更加深刻（主）。你反对你对，我反对你对，他反对你找他（误），反正不怎么准确，凑合看就对了。\nSSH原理SSH简介SSH是Secure(s，即安全)和Shell(sh，即命令行界面)的合称，字面意思就是安全的命令行。可以理解为链接两个计算机的安全中介，相当于专门会议室的存在。接下来本人将不详细不全面的介绍一下SSH是什么，如何实现，常用的指令是什么。\nSSH是什么？从本质上讲，SSH是一种网络协议，其作用是让本地用户能够以一种安全的方式访问另一台计算机。常用于远程访问大型服务器、维护和调试大型Linux和Unix系统服务器、创建两台计算机之间加密通道等需要防止信息盗窃和篡改的场景。其最大的特点和优势就是“安全”。通过加密访问的方式实现对数据的保护。（大概就像是你和另一台计算机互相发电报来确认信息，所以说使用SSH没有一定的门槛也是不对的）\nSSH是如何实现的？SSH的 实现大致可以分为三个步骤，即“通道搭建”，“用户认证”，“开始通话”。接下来会使用我自己能看懂的方式记录这三个过程的具体细节。\n1.通道的搭建这一步从理论上很好理解，你要和你的好基(da)友(er)打电话让他给你带饭是，你得现有他的联系方式吧。所以你的计算机和对面的计算机之间需要搭建一条两个计算机之间通话的专用的通道，以便下一步信息的传递。这个过程的具体细节是这样的：\n(1)TCP链接的建立这里就像修路一样，修建柏油路之前一定得打好土培子。TCP链接本身不具备加密功能，但胜在数据传输稳定。通过TCP链接，两台计算机之间的加密通道得以建立，但在此之前还有一件事要做。\n(2)版本号协商虽然数据传输的基础通道已经有了，但开工之前得确认一下甲方的需求和自己的建设方案是否一致吧？所以这一步就要确认双方的SSH版本（SSH有两个版本SSH-1和SSH-2，两者是不互通的。一般会选择比SSH-1更安全的SSH-2），版本一致才可以继续搭建加密通道，有了一致的版本号，安全通道的建设才算正式开始。\n(3)密匙交换这一步实际就是在土培上铺柏油路的技术活了，也是实现加密通话的核心步骤。这里使用的施工工具就是一个专门的算法Diffie-Hellman,即密匙交换算法。这里我们对它实现的功能和过程做简单的介绍。当使用SSH协议时，你的计算机和对面的计算机都会拥有一套独立但相同的加密数据处理系统，两台计算机之间的交流将通过数字的交换和对数据的破译来进行。（这个过程实际上就是两个计算机在互相发电报，只不过传电报的方式本身和这个电报的加密方式是由算法确定的）通过算法的作用，即使中间的数据被截取，由于不知道加密的方式，也无法破译传输的内容，这也对TCP协议的不安全性做了一定的预判和处理。最后数据在双方的计算机中被破译后就是我们所需要的密匙。\n(4)服务器认证加密的通道搭建完了，接下来就可以进行情报交换的准备。你的计算机首先得确认对面是地下党而不是特务，这时候就会调用自己计算机里的可信任列表（也就是白名单），和对面计算机的公匙进行比对，在确认对面不是装的后，才可以进行下一步。但面对第一次见到的新人怎么办？总不能直接不访问了吧？所以对于第一次链接的计算机，会使用警告的方式来提示。忽略警告就可以访问，这个过程完全取决你。如果公匙对不上，说明对方不是同志，而是特务，这时候就会直接拒绝连接，防止受到攻击。\n至此，通道已经搭建完毕，接下来的就是数据的传输吗？\n2.用户认证当你看到这一行字时，就证明了答案显然不是这么简单。对面的人你认识，但是不是你的线人呢？你一眼就看出来了，但计算机没那么智能，得有个专门的确认过程（也就是还得对暗号）这里SSH提供了两种认证方式：密码&#x2F;公匙认证。\n(1)密码认证好处：简单方便坏处：你要是设置一个简单的密码，这将成为整个通道中最薄弱的环节，真有实力的人可以暴力破解\n(2)公匙认证使用这种方式，你的计算机将向服务器发送一个公匙，服务器会在他的白名单里确认你的身份(你验完人家了，人家得验你吧)。如果公匙再白名单里，它会生成一个消息，让你用私匙破解这条消息(确认你的暗号不是逼供出来的)。破解后的消息会回传给服务器，内容对上了才算成功(这里的公匙和私匙一般都是.ssh文件)。在这个过程中，你的私匙就像是暗号的生成规律，它只在你自己的计算机里，并没有传输到通道里，所以不会有泄密的风险。\n3.通话进行终于在接触线人，确认身份，确认线人之后，你俩终于可以开始情报的传输了。这个过程有几个特性：\n(1)多路复用一个链接内还可以同时存在多个通路进行指令(shell)、文件、端口的转交（好不容易见到线人，一次只传一条情报？这可能吗？）。\n(2)保持加密通路中的数据还是向发电报一样被传输和破解的（就像你在网上冲浪时需要屏蔽关键词一样）。\n(3)数据完整SSH会对传输的数据包添加“消息认证码”，确保数据在传输过程中没有被篡改（防止传输错误的情报）。\n"},{"title":"随记","url":"/2025/10/30/%E9%9A%8F%E8%AE%B0/","content":""}]